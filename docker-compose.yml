version: '3.8'

services:
  # Aplicación principal
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: gaus-control-app
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - database
      - redis
    networks:
      - gaus-network
    restart: unless-stopped

  # Base de datos PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: gaus-control-db
    environment:
      POSTGRES_DB: gaus_control
      POSTGRES_USER: gaus_user
      POSTGRES_PASSWORD: gaus_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - gaus-network
    restart: unless-stopped

  # Redis para caché y sesiones
  redis:
    image: redis:7-alpine
    container_name: gaus-control-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gaus-network
    restart: unless-stopped

  # Nginx como proxy reverso (opcional para producción)
  nginx:
    image: nginx:alpine
    container_name: gaus-control-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - gaus-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  gaus-network:
    driver: bridge
