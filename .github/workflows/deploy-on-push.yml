name: Auto Deploy on Push

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.gitignore'
      - '.gitattributes'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  auto-deploy:
    name: 🚀 Auto Deploy to Development
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🔐 Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🏷️ Generate Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=sha,prefix={{branch}}-
          
    - name: 🔨 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        target: development
        
    - name: 📝 Create deployment status
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: context.payload.deployment?.id || 1,
            state: 'in_progress',
            description: 'Deploying Docker containers...'
          });
          
    - name: 🚀 Deploy containers locally
      run: |
        echo "🚀 Starting deployment process..."
        
        # Pull the latest images
        docker-compose pull app
        
        # Recreate only the app container with new image
        docker-compose up -d --force-recreate app
        
        echo "✅ Deployment completed!"
        
    - name: 🔍 Wait for application to be ready
      run: |
        echo "⏳ Waiting for application to start..."
        timeout 60 bash -c 'until curl -f http://localhost:3000/health; do sleep 2; done'
        echo "✅ Application is ready!"
        
    - name: 🧪 Run post-deployment tests
      run: |
        echo "🧪 Running post-deployment tests..."
        
        # Test health endpoint
        response=$(curl -s http://localhost:3000/health)
        echo "Health check response: $response"
        
        # Test main endpoint
        curl -f http://localhost:3000/ || exit 1
        
        # Test API endpoint
        curl -f http://localhost:3000/api || exit 1
        
        echo "✅ All tests passed!"
        
    - name: 📊 Update deployment status
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: context.payload.deployment?.id || 1,
            state: state,
            description: state === 'success' ? 'Deployment completed successfully!' : 'Deployment failed',
            environment_url: 'http://localhost:3000'
          });
          
    - name: 📱 Send notification
      if: always()
      run: |
        status="${{ job.status }}"
        if [ "$status" = "success" ]; then
          echo "✅ Deployment SUCCESS! GausControl is now running the latest version."
          echo "🌐 Access your application at: http://localhost:3000"
        else
          echo "❌ Deployment FAILED! Please check the logs for details."
        fi
        
    - name: 📝 Generate deployment report
      if: always()
      run: |
        echo "## 🚀 Deployment Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status**: ${{ job.status == 'success' && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ job.status }}" = "success" ]; then
          echo "🌐 **Application URL**: http://localhost:3000" >> $GITHUB_STEP_SUMMARY
          echo "🔍 **Health Check**: http://localhost:3000/health" >> $GITHUB_STEP_SUMMARY
        fi
